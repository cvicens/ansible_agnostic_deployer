---

#- debug: msg="hostvars={{hostvars}}"
#- debug: msg="vars={{vars}}"
- debug: msg="group_names={{group_names}}"
- debug: msg="groups={{groups}}"
#  when: "'vagrant1' not in play_hosts"
#when: inventory_hostname in groups['frontendcluster1']
- name: Show hosts
  debug: msg="inventory_hostname {{ inventory_hostname }} play_hosts {{ play_hosts }} ansible_host {{ ansible_host }} xyz {{ xyz }}"
  when: inventory_hostname in groups.masters
  

# Tasks to be excute on all nodes
# See: https://access.redhat.com/documentation/en-us/red_hat_mobile_application_platform/4.5/html/installing_rhmap/preparing-infrastructure-for-installation
- name: Run on all nodes
  block: 
  # Activate subscription-manager  
  - name: Check subscription status on all nodes
    shell: subscription-manager status
    register: subs
    ignore_errors: yes
  - set_fact:
      subs_status={{ true if (subs.stdout | search("Current")) else false }}
  - name: Subscribe nodes
    shell: subscription-manager register --username="{{ rhn_username }}" --password="{{ rhn_password }}"
    when: subs_status|bool == false
  
  # Attach RHM POOL ID
  - name: Get Red Hat Mobile pool ID
    shell: subscription-manager list --available --matches=*Mobile* --pool-only | head -1 -
    register: rhmap_pool_id
    run_once: true
  - name: Attach pool ID ( "{{ rhmap_pool_id.stdout }}" ) on all hosts
    shell: subscription-manager attach --pool="{{ rhmap_pool_id.stdout }}"

  # Refresh certificates
  - name: Refresh certificates
    shell: subscription-manager refresh

# Tasks to be executed only in the bastion server
# 2.1. Install the RHMAP OpenShift Templates
- name: Run on bastion
  block:
    # Enabling RHM repos
    - name: Enable Red Hat Mobile repos
      shell: subscription-manager repos --enable="{{ rhmap_repo }}"

    # Installing templates
    - name: Install templates & playbooks on bastion
      yum:  
        name: "rhmap-fh-openshift-templates"
        state: latest

    # 2.2.2. Setting Up an Inventory File
    - name: Setup ansible inventory for RHMAP
      template:
        src: hosts_rhmap
        dest: /etc/ansible/hosts_rhmap
        mode: 0640
  when: "'bastion' not in play_hosts"
  
# 2.3. Seeding the Nodes with the RHMAP Images 
- block:
    - name: Seed rhmap core docker images to nodes
      shell: |
        export ANSIBLE_ROLES_PATH=/opt/rhmap/"{{ rhmap_version}}"/rhmap-installer/roles/ \
        ansible-playbook -i /etc/ansible/hosts_rhmap /opt/rhmap/"{{ rhmap_version}}"/rhmap-installer/playbooks/seed-images.yml \
        -e "project_type=core" \
        -e "rhmap_version='{{ rhmap_version }}'" > /tmp/rhmap-seed-core.out 2>&1
      async: 5400
      poll: 30
      register: seed_core

    - fail: msg="Failed to seed core images to nodes. Check log output /tmp/rhmap-seed-core.out"
      when: seed_core.rc is undefined or seed_core.rc != 0

- block:
  - name: Seed rhmap mbaas docker images to nodes
    shell: |
      export ANSIBLE_ROLES_PATH=/opt/rhmap/"{{ rhmap_version}}"/rhmap-installer/roles/ \
      ansible-playbook -i /etc/ansible/hosts_rhmap /opt/rhmap/"{{ rhmap_version}}"/rhmap-installer/playbooks/seed-images.yml \
      -e "project_type=mbaas" \
      -e "rhmap_version='{{ rhmap_version }}'" > /tmp/rhmap-seed-mbaas 2>&1
    async: 5400
    poll: 30
    register: seed_mbaas

  - fail: msg="Failed to seed mbaas images to nodes. Check log output /tmp/rhmap-seed-mbaas.out"
    when: seed_mbaas.rc is undefined or seed_mbaas.rc != 0

- name: Prepare PVs
  block:
    - file:
      path: /etc/exports.d/rhmap-vols.exports
      state: touch
      mode: 755

    - file:
      path: /srv/nfs/rhmap-vols/
      state: directory
      mode: 0755

    - name: Iterate over required PVs
      include_tasks: setup_nfs.yml
      with_dict: "{{ required_pvs }}"
      

#mkdir -p /srv/nfs/user-vols/pv{1..100}
#
#for pvnum in {1..100} ; do
#echo "/srv/nfs/user-vols/pv${pvnum} *(rw,root_squash)" >> /etc/exports.d/openshift-uservols.exports
#chown -R nfsnobody.nfsnobody  /srv/nfs
#chmod -R 777 /srv/nfs
#done
#
#systemctl restart nfs-server

- name: pre_workload Tasks Complete
  debug:
    msg: "Pre-Software checks completed successfully"